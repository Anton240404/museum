import { useState } from 'react';
import styles from './vertual-keyboard.module.css';

type Props = {
    onKeyPress: (value: string) => void;
    onClose: () => void;
};

type LayoutName = 'default' | 'ru' | 'symbols';

const layouts = {
    default: [
        ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'],
        ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l'],
        ['‚¨Ü', 'z', 'x', 'c', 'v', 'b', 'n', 'm', '‚å´'],
        ['&123', 'üåê', 'Space', 'Enter']
    ],
    ru: [
        ['–π', '—Ü', '—É', '–∫', '–µ', '–Ω', '–≥', '—à', '—â', '–∑'],
        ['—Ñ', '—ã', '–≤', '–∞', '–ø', '—Ä', '–æ', '–ª', '–¥'],
        ['‚¨Ü', '—è', '—á', '—Å', '–º', '–∏', '—Ç', '—å', '‚å´'],
        ['&123', 'üåê', 'Space', 'Enter']
    ],
    symbols: [
        ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],
        ['-', '/', ':', ';', '(', ')', '‚ÇΩ', '&', '@'],
        ['.', ',', '?', '!', '\'', '‚å´'],
        ['ABC', '–ê–ë–í', 'Space', 'Enter']
    ]
} as const;

export function VirtualKeyboard(props:Props) {
    const [layout, setLayout] = useState<LayoutName>('default');

    const handleClick = (key: string) => {
        switch (key) {
            case '‚å´':
                props.onKeyPress('Backspace');
                break;
            case 'Enter':
                props.onKeyPress('Enter');
                break;
            case 'Space':
                props.onKeyPress(' ');
                break;
            case '&123':
                setLayout('symbols');
                break;
            case 'ABC':
                setLayout('default');
                break;
            case '–ê–ë–í':
                setLayout('ru');
                break;
            case 'üåê':
                setLayout((prev) => (prev === 'default' ? 'ru' : 'default'));
                break;
            default:
                props.onKeyPress(key);
        }
    };

    return (
        <div className={styles.keyboard}>
            {layouts[layout].map((row, rowIndex) => (
                <div key={rowIndex} className={styles.row}>
                    {row.map((key) => (
                        <button key={key} className={styles.key} onClick={() => handleClick(key)}>
                            {key}
                        </button>
                    ))}
                </div>
            ))}
            <button className={styles.close} onClick={props.onClose}>‚úï</button>
        </div>
    );
}